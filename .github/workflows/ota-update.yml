name: EAS OTA Update

on:
  push:
    branches: [dev, staging, main]

jobs:
  detect-native-change:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Detect native-impacting changes
        id: detect
        run: |
          set -e
          base_ref=$(git rev-parse HEAD~1)
          echo "Comparing against $base_ref"
          CHANGED=$(git diff --name-only "$base_ref" HEAD)
          echo "$CHANGED" | sed 's/^/changed: /'
          NATIVE_MATCHES=$(echo "$CHANGED" | grep -E '^(package.json|yarn.lock|pnpm-lock.yaml|package-lock.json|android/|ios/|app\.plugin\.(js|ts)|app\.config\.(js|ts|json)|eas\.json|plugins?/|patches/|babel\.config\.(js|ts)|metro\.config\.(js|ts))' || true)
          if [ -n "$NATIVE_MATCHES" ]; then
            echo "native_changed=true" >> $GITHUB_OUTPUT
            echo "Native-impacting changes detected:" && echo "$NATIVE_MATCHES"
          else
            echo "native_changed=false" >> $GITHUB_OUTPUT
            echo "No native-impacting changes detected."
          fi
  update:
    needs: detect-native-change
    if: needs.detect-native-change.outputs.native_changed == 'false'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install deps
        run: |
          npm ci
          npm i -g eas-cli@latest
      - name: Determine channel
        id: ch
        run: |
          branch="${GITHUB_REF_NAME}"
          if [ "$branch" = "dev" ]; then echo "channel=development" >> $GITHUB_OUTPUT; fi
          if [ "$branch" = "staging" ]; then echo "channel=preview" >> $GITHUB_OUTPUT; fi
          if [ "$branch" = "main" ]; then echo "channel=production" >> $GITHUB_OUTPUT; fi
      - name: EAS update
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
        run: |
          eas update --channel ${{ steps.ch.outputs.channel }} --non-interactive --message "Auto OTA: ${GITHUB_SHA::7} (${GITHUB_REF_NAME})"

  notify-skip:
    needs: detect-native-change
    if: needs.detect-native-change.outputs.native_changed == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Skip notice
        run: echo "Native-impacting changes detected; skipping OTA. Run a full EAS build instead."

  build-dev-android:
    needs: detect-native-change
    if: needs.detect-native-change.outputs.native_changed == 'true' && github.ref == 'refs/heads/dev'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install deps and EAS
        run: |
          npm ci
          npm i -g eas-cli@latest jq
      - name: Build Android (development-local)
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
        run: |
          eas build --profile development-local --platform android --non-interactive --wait --json > build.json
          echo "Build JSON:" && cat build.json
      - name: Download APK
        id: dl
        run: |
          url=$(jq -r '.[0].artifacts.buildUrl' build.json)
          name="app-dev-${GITHUB_SHA::7}.apk"
          echo "url=$url" >> $GITHUB_OUTPUT
          echo "name=$name" >> $GITHUB_OUTPUT
          curl -L "$url" -o "$name"
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.dl.outputs.name }}
          path: ${{ steps.dl.outputs.name }}
