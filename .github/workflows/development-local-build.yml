name: Development Local Build

permissions:
  contents: write

on:
  workflow_dispatch:
    inputs:
      platform:
        type: choice
        description: 'Platform to build'
        default: 'all'
        options:
          - android
          - ios
          - all

env:
  EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
  NODE_OPTIONS: --openssl-legacy-provider

jobs:
  build:
    strategy:
      matrix:
        platform: [android]
        include:
          - platform: ios
            runs-on: macos-latest
    runs-on: ${{ matrix.platform == 'ios' && 'macos-latest' || 'ubuntu-latest' }}
    steps:
      - name: 🏗 Checkout repository
        uses: actions/checkout@v4

      - name: 🏗 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: 📦 Install dependencies
        run: |
          npm ci
          npm i -g eas-cli@latest

      - name: 🔧 Show EAS CLI version
        run: eas --version

      - name: 🔐 Prepare Firebase config files from secrets
        run: |
          printf "%s" "$GOOGLE_SERVICES_JSON" > google-services.json
          printf "%s" "$GOOGLESERVICE_INFO_DEV_PLIST" > GoogleService-Info.plist
        env:
          GOOGLE_SERVICES_JSON: ${{ secrets.GOOGLE_SERVICES_JSON }}
          GOOGLESERVICE_INFO_DEV_PLIST: ${{ secrets.GOOGLESERVICE_INFO_DEV_PLIST }}

      - name: ✅ Verify iOS Firebase plist exists
        if: matrix.platform == 'ios'
        run: |
          if [ ! -s GoogleService-Info.plist ]; then
            echo "GoogleService-Info.plist is missing or empty. Ensure GOOGLESERVICE_INFO_DEV_PLIST secret is set." >&2
            exit 1
          fi

      - name: 📱 Build Android (development-local APK)
        if: matrix.platform == 'android'
        run: |
          export NODE_OPTIONS="--openssl-legacy-provider --max_old_space_size=4096"
          eas build --platform android --profile development-local --non-interactive --local --output ./app-development-local.apk
        env:
          NODE_ENV: development

      - name: 🍎 Build iOS (development-local dev client)
        if: matrix.platform == 'ios'
        run: |
          export NODE_OPTIONS="--openssl-legacy-provider --max_old_space_size=4096"
          eas build --platform ios --profile development-local --non-interactive --local --output ./app-development-local.ipa
        env:
          NODE_ENV: development

      - name: 🏷️ Generate build information
        id: build-info
        run: |
          if ! command -v jq &> /dev/null; then
            sudo apt-get update && sudo apt-get install -y jq
          fi
          VERSION=$(npx expo config --json | jq -r '.expo.version')
          BUILD_NUMBER=$(date +%Y%m%d%H%M)
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "build_number=$BUILD_NUMBER" >> $GITHUB_OUTPUT
          # Generate changelog from commit messages since last tag
          if git describe --tags --abbrev=0 > /dev/null 2>&1; then
            LAST_TAG=$(git describe --tags --abbrev=0)
            git log $LAST_TAG..HEAD --pretty=format:"- %s" > changelog.md
          else
            git log --pretty=format:"- %s" -n 20 > changelog.md
          fi

      - name: 📝 Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          name: 'Development Build v${{ steps.build-info.outputs.version }}-${{ steps.build-info.outputs.build_number }}'
          tag_name: 'dev-v${{ steps.build-info.outputs.version }}-${{ steps.build-info.outputs.build_number }}'
          files: |
            ./app-development-local.apk
            ./app-development-local.ipa
          body_path: changelog.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
